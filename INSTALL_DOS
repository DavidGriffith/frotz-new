===========================================================================
---------------------------------------------------------------------------
|  READ THIS FILE ALL THE WAY THROUGH BEFORE ATTEMPTING TO INSTALL FROTZ  |
---------------------------------------------------------------------------
===========================================================================

Frotz was originally written specifically for MS/PC DOS.  When it began
to be ported to other machines and operating systems, the DOS port
lagged behind.  Now it is more or less on par with Unix Frotz with the
conspicuous exception that Blorb is not entirely supported.  Blorb is
supported only as far as extracting a zcode file, but not for getting
audio and graphic data.  For now, only the old Infocom-style mechanism
for these are supported.

Sound is supported through Soundblaster compatible sound cards.  Graphic
levels from Hercules to MCGA are supported.

To compile DOS Frotz, you need the following:
	* Borland Turbo C++ 3.00.  This is the latest version I'm aware 
	  of capable of building 16-bit DOS applications.
	  Alternatively, use Open Watcom C 2.0 beta, May 17 2020, or higher.
	* PC-DOS, MS-DOS, or DR-DOS version 5.0 or higher.
	  FreeDOS 1.2 works well too.


=============================
Compilation with Turbo C++ ||
=============================

Turbo C++ is typically installed to C:\tc.  Make sure your path contains 
C:\tc\bin.  When this is done, type "make".  Did Borland's make program 
run?  Now type "tcc".  If those two commands work, then you should be 
ready to compile.

To compile, you need to first get the source code into a DOS machine,
whether it's real or emulated.  Do "make dos" to produce a zip file,
frotzsrc.zip, which can then be copied to your real or virtual DOS
machine.

To compile, open up this zip file and go into the frotzsrc directory and
type "build".  That will invoke "build.bat", a batch file that simply
executes "make -f makefile.tc".  The reason for this is a bit of
syntactic sugar to deal with the fact that it is impractical to have one
Makefile build both Unix and DOS versions.  After about a minute, you
should have FROTZ.EXE.  This file is all you need to run Frotz.  Put it
somewhere in your path and go to wherever you keep your Infocom games.
Type "frotz zork1.dat" or whatever and there you go.

Compile-time options are set in src/dos/defs.h.  There should be no need
to edit Makefile.tc.  Having compile-time options like this allows for
the Turbo C IDE to be used.  At the moment, the settings in frotz.prj do
not result in an optimized executable.  I'm not sure how to get that
file in agreement with what's in Makefile.tc.

To clean up after a build, type "build clean".


===============================================
Compilation with Open Watcom C hosted on DOS ||
===============================================

Open Watcom is typically installed to C:\watcom.  Make sure the environment
variable WATCOM points to the installation path, e.g.

	set WATCOM=C:\watcom

When this is done, type "%WATCOM%\binw\make".  Did Watcom's make program
run?  If this command works, then you should be ready to compile.

To compile, you need to first get the source code into a DOS machine,
whether it's real or emulated.  Do "make dos" to produce a zip file,
frotzsrc.zip, which can then be copied to your real or virtual DOS
machine.

To compile, open up this zip file and go into the frotzsrc directory and
type "owbuild".  That will invoke "owbuild.bat", a batch file that sets some
environment variables and then executes "wmake -f makefile.ow".  After about
a minute, you should have FROTZ.EXE.  This file is all you need to run
Frotz.  Put it somewhere in your path and go to wherever you keep your
Infocom games.  Type "frotz zork1.dat" or whatever and there you go.

Compile-time options are set in src/owdos/defs.h.  There should be no need
to edit Makefile.ow.

To clean up after a build, type "owbuild clean".


========================
Hardware Requirements ||
========================

The exact hardware requirements of DOS Frotz are yet to be determined.  
Please send me reports of what Zcode works and what doesn't.
